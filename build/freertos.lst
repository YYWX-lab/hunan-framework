ARM GAS  C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Src/freertos.c"
  20              		.section	.text.StartDefaultTask,"ax",%progbits
  21              		.align	1
  22              		.global	StartDefaultTask
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	StartDefaultTask:
  28              	.LVL0:
  29              	.LFB242:
   1:Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Src/freertos.c **** /**
   3:Src/freertos.c ****  ******************************************************************************
   4:Src/freertos.c ****  * File Name          : freertos.c
   5:Src/freertos.c ****  * Description        : Code for freertos applications
   6:Src/freertos.c ****  ******************************************************************************
   7:Src/freertos.c ****  * @attention
   8:Src/freertos.c ****  *
   9:Src/freertos.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Src/freertos.c ****  * All rights reserved.
  11:Src/freertos.c ****  *
  12:Src/freertos.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Src/freertos.c ****  * in the root directory of this software component.
  14:Src/freertos.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/freertos.c ****  *
  16:Src/freertos.c ****  ******************************************************************************
  17:Src/freertos.c ****  */
  18:Src/freertos.c **** /* USER CODE END Header */
  19:Src/freertos.c **** 
  20:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/freertos.c **** #include "FreeRTOS.h"
  22:Src/freertos.c **** #include "task.h"
  23:Src/freertos.c **** #include "main.h"
  24:Src/freertos.c **** #include "cmsis_os.h"
  25:Src/freertos.c **** 
  26:Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Src/freertos.c **** 
  29:Src/freertos.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s 			page 2


  30:Src/freertos.c **** 
  31:Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Src/freertos.c **** /* USER CODE BEGIN PTD */
  33:Src/freertos.c **** 
  34:Src/freertos.c **** /* USER CODE END PTD */
  35:Src/freertos.c **** 
  36:Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Src/freertos.c **** /* USER CODE BEGIN PD */
  38:Src/freertos.c **** 
  39:Src/freertos.c **** /* USER CODE END PD */
  40:Src/freertos.c **** 
  41:Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Src/freertos.c **** /* USER CODE BEGIN PM */
  43:Src/freertos.c **** 
  44:Src/freertos.c **** /* USER CODE END PM */
  45:Src/freertos.c **** 
  46:Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Src/freertos.c **** /* USER CODE BEGIN Variables */
  48:Src/freertos.c **** 
  49:Src/freertos.c **** /* USER CODE END Variables */
  50:Src/freertos.c **** osThreadId defaultTaskHandle;
  51:Src/freertos.c **** 
  52:Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  53:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  54:Src/freertos.c **** 
  55:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  56:Src/freertos.c **** 
  57:Src/freertos.c **** void StartDefaultTask(void const * argument);
  58:Src/freertos.c **** 
  59:Src/freertos.c **** extern void MX_USB_DEVICE_Init(void);
  60:Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  61:Src/freertos.c **** 
  62:Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  63:Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  64:Src/freertos.c **** 
  65:Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  66:Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  67:Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  68:Src/freertos.c **** 
  69:Src/freertos.c **** void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskSt
  70:Src/freertos.c **** {
  71:Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  72:Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  73:Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  74:Src/freertos.c ****   /* place for user code */
  75:Src/freertos.c **** }
  76:Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  77:Src/freertos.c **** 
  78:Src/freertos.c **** /**
  79:Src/freertos.c ****   * @brief  FreeRTOS initialization
  80:Src/freertos.c ****   * @param  None
  81:Src/freertos.c ****   * @retval None
  82:Src/freertos.c ****   */
  83:Src/freertos.c **** void MX_FREERTOS_Init(void) {
  84:Src/freertos.c ****   /* USER CODE BEGIN Init */
  85:Src/freertos.c **** 
  86:Src/freertos.c ****   /* USER CODE END Init */
ARM GAS  C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s 			page 3


  87:Src/freertos.c **** 
  88:Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  89:Src/freertos.c ****   /* add mutexes, ... */
  90:Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  91:Src/freertos.c **** 
  92:Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  93:Src/freertos.c ****   /* add semaphores, ... */
  94:Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  95:Src/freertos.c **** 
  96:Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  97:Src/freertos.c ****   /* start timers, add new ones, ... */
  98:Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
  99:Src/freertos.c **** 
 100:Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 101:Src/freertos.c ****   /* add queues, ... */
 102:Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 103:Src/freertos.c **** 
 104:Src/freertos.c ****   /* Create the thread(s) */
 105:Src/freertos.c ****   /* definition and creation of defaultTask */
 106:Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 107:Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 108:Src/freertos.c **** 
 109:Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 110:Src/freertos.c ****   /* add threads, ... */
 111:Src/freertos.c **** 
 112:Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 113:Src/freertos.c **** 
 114:Src/freertos.c **** }
 115:Src/freertos.c **** 
 116:Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 117:Src/freertos.c **** /**
 118:Src/freertos.c ****  * @brief  Function implementing the defaultTask thread.
 119:Src/freertos.c ****  * @param  argument: Not used
 120:Src/freertos.c ****  * @retval None
 121:Src/freertos.c ****  */
 122:Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 123:Src/freertos.c **** void StartDefaultTask(void const * argument)
 124:Src/freertos.c **** {
  30              		.loc 1 124 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 124 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 125:Src/freertos.c ****   /* init code for USB_DEVICE */
 126:Src/freertos.c ****   MX_USB_DEVICE_Init();
  40              		.loc 1 126 3 is_stmt 1 view .LVU2
  41 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
  42              	.LVL1:
 127:Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 128:Src/freertos.c ****   osThreadTerminate(NULL); // 避免空置和切换占用cpu
  43              		.loc 1 128 3 view .LVU3
  44 0006 0020     		movs	r0, #0
ARM GAS  C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s 			page 4


  45 0008 FFF7FEFF 		bl	osThreadTerminate
  46              	.LVL2:
 129:Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 130:Src/freertos.c **** }
  47              		.loc 1 130 1 is_stmt 0 view .LVU4
  48 000c 08BD     		pop	{r3, pc}
  49              		.cfi_endproc
  50              	.LFE242:
  52              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  53              		.align	1
  54              		.global	vApplicationGetIdleTaskMemory
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	vApplicationGetIdleTaskMemory:
  60              	.LVL3:
  61              	.LFB240:
  70:Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  62              		.loc 1 70 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  71:Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  67              		.loc 1 71 3 view .LVU6
  71:Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  68              		.loc 1 71 25 is_stmt 0 view .LVU7
  69 0000 034B     		ldr	r3, .L4
  70 0002 0360     		str	r3, [r0]
  72:Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  71              		.loc 1 72 3 is_stmt 1 view .LVU8
  72:Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  72              		.loc 1 72 27 is_stmt 0 view .LVU9
  73 0004 034B     		ldr	r3, .L4+4
  74 0006 0B60     		str	r3, [r1]
  73:Src/freertos.c ****   /* place for user code */
  75              		.loc 1 73 3 is_stmt 1 view .LVU10
  73:Src/freertos.c ****   /* place for user code */
  76              		.loc 1 73 25 is_stmt 0 view .LVU11
  77 0008 8023     		movs	r3, #128
  78 000a 1360     		str	r3, [r2]
  75:Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  79              		.loc 1 75 1 view .LVU12
  80 000c 7047     		bx	lr
  81              	.L5:
  82 000e 00BF     		.align	2
  83              	.L4:
  84 0010 00000000 		.word	xIdleTaskTCBBuffer
  85 0014 00000000 		.word	xIdleStack
  86              		.cfi_endproc
  87              	.LFE240:
  89              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  90              		.align	1
  91              		.global	MX_FREERTOS_Init
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
ARM GAS  C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s 			page 5


  96              	MX_FREERTOS_Init:
  97              	.LFB241:
  83:Src/freertos.c ****   /* USER CODE BEGIN Init */
  98              		.loc 1 83 29 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 32
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102 0000 10B5     		push	{r4, lr}
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
 107 0002 88B0     		sub	sp, sp, #32
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 40
 106:Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 110              		.loc 1 106 3 view .LVU14
 111 0004 0DF1040C 		add	ip, sp, #4
 112 0008 074C     		ldr	r4, .L8
 113 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 114 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 115 0010 94E80700 		ldm	r4, {r0, r1, r2}
 116 0014 8CE80700 		stm	ip, {r0, r1, r2}
 107:Src/freertos.c **** 
 117              		.loc 1 107 3 view .LVU15
 107:Src/freertos.c **** 
 118              		.loc 1 107 23 is_stmt 0 view .LVU16
 119 0018 0021     		movs	r1, #0
 120 001a 01A8     		add	r0, sp, #4
 121 001c FFF7FEFF 		bl	osThreadCreate
 122              	.LVL4:
 107:Src/freertos.c **** 
 123              		.loc 1 107 21 discriminator 1 view .LVU17
 124 0020 024B     		ldr	r3, .L8+4
 125 0022 1860     		str	r0, [r3]
 114:Src/freertos.c **** 
 126              		.loc 1 114 1 view .LVU18
 127 0024 08B0     		add	sp, sp, #32
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 8
 130              		@ sp needed
 131 0026 10BD     		pop	{r4, pc}
 132              	.L9:
 133              		.align	2
 134              	.L8:
 135 0028 00000000 		.word	.LANCHOR0
 136 002c 00000000 		.word	defaultTaskHandle
 137              		.cfi_endproc
 138              	.LFE241:
 140              		.section	.rodata.str1.4,"aMS",%progbits,1
 141              		.align	2
 142              	.LC0:
 143 0000 64656661 		.ascii	"defaultTask\000"
 143      756C7454 
 143      61736B00 
 144              		.section	.bss.xIdleStack,"aw",%nobits
 145              		.align	2
ARM GAS  C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s 			page 6


 148              	xIdleStack:
 149 0000 00000000 		.space	512
 149      00000000 
 149      00000000 
 149      00000000 
 149      00000000 
 150              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 151              		.align	2
 154              	xIdleTaskTCBBuffer:
 155 0000 00000000 		.space	100
 155      00000000 
 155      00000000 
 155      00000000 
 155      00000000 
 156              		.global	defaultTaskHandle
 157              		.section	.bss.defaultTaskHandle,"aw",%nobits
 158              		.align	2
 161              	defaultTaskHandle:
 162 0000 00000000 		.space	4
 163              		.section	.rodata
 164              		.align	2
 165              		.set	.LANCHOR0,. + 0
 166              	.LC2:
 167 0000 00000000 		.word	.LC0
 168 0004 00000000 		.word	StartDefaultTask
 169 0008 0000     		.short	0
 170 000a 0000     		.space	2
 171 000c 00000000 		.word	0
 172 0010 80000000 		.word	128
 173 0014 00000000 		.word	0
 174 0018 00000000 		.word	0
 175              		.text
 176              	.Letext0:
 177              		.file 2 "D:/arm-gnu-toolchain-14.2.rel1-mingw-w64-x86_64-arm-none-eabi/arm-none-eabi/include/machi
 178              		.file 3 "D:/arm-gnu-toolchain-14.2.rel1-mingw-w64-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_
 179              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 180              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 181              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 182              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:21     .text.StartDefaultTask:00000000 $t
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:27     .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:53     .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:59     .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:84     .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:154    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:148    .bss.xIdleStack:00000000 xIdleStack
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:90     .text.MX_FREERTOS_Init:00000000 $t
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:96     .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:135    .text.MX_FREERTOS_Init:00000028 $d
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:161    .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:141    .rodata.str1.4:00000000 $d
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:145    .bss.xIdleStack:00000000 $d
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:151    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:158    .bss.defaultTaskHandle:00000000 $d
C:\Users\29237\AppData\Local\Temp\ccRhaZ4T.s:164    .rodata:00000000 $d

UNDEFINED SYMBOLS
MX_USB_DEVICE_Init
osThreadTerminate
osThreadCreate
